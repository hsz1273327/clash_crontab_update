name: "build images for release"

on:
  release:
    types:
      - released
jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: SplitTag
        uses: jungwinter/split@v2
        id: split
        with:
          msg: ${{ github.ref_name }}
          separator: "-"

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=hsz1273327/clash_crontab_update
          VERSION_FULL="${{ github.ref_name }}"
          VERSION_LATEST="latest"
          TAGS="${DOCKER_IMAGE}:${VERSION_FULL},${DOCKER_IMAGE}:${VERSION_LATEST}"
          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=DOCKER_HUB_PWD::${secrets.DOCKER_HUB_PWD}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PWD }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}